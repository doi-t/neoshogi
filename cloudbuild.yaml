steps:
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'gs://neoshogi-dev/credentials/firebase-adminsdk.json', '/workspace/firebase-adminsdk.json']
  id: 'adminsdk-download'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', './build/package/Dockerfile.neoshogi', '-t', 'gcr.io/$PROJECT_ID/neoshogi', '.']
  waitFor: ['adminsdk-download']
  id: 'neoshogi-build'
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/neoshogi']
  waitFor: ['neoshogi-build']
  id: 'neoshogi-push'
- name: "gcr.io/cloud-builders/gcloud"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      gcloud beta run deploy neoshogi \
      --image gcr.io/$PROJECT_ID/neoshogi \
      --region asia-northeast1 \
      --platform managed \
      --allow-unauthenticated \
      --set-env-vars=GOOGLE_APPLICATION_CREDENTIALS="firebase-adminsdk.json" \
      --quiet
  waitFor: ['neoshogi-push']
- name: "gcr.io/cloud-builders/docker"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      docker build \
      --build-arg FIREBASE_TOKEN \
      -f ./build/package/Dockerfile.firebase \
      -t gcr.io/$PROJECT_ID/firebase \
      .
  secretEnv: ['FIREBASE_TOKEN']
  waitFor: ['-'] # Start immediately
  id: 'firebase-hosting-deploy'
images:
- 'gcr.io/$PROJECT_ID/neoshogi'
- 'gcr.io/$PROJECT_ID/firebase'
secrets:
- kmsKeyName: projects/doi-t-alpha/locations/global/keyRings/neoshogi/cryptoKeys/firebase-token
  secretEnv:
    FIREBASE_TOKEN: CiQAfXuhstN4Y7o8UB2Jskzy+l1aZY/4ftfFk/d0MYLAE+P1ODQSVgAsLWaAnNk/SChgJM7GUKbuvT3LRfsQirHCbZ9BXfd8p/wwHbY9cSDi/fZW3umN6Zs/73BodHHGD4rONWDVVeJZYDoH7SgYQefS9Dn4zUV6OdmPXmco
